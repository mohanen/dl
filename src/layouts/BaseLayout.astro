---
import { ViewTransitions } from 'astro:transitions';
import ThemeToggle from '../components/ThemeToggle.svelte';
interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="en">
	<head>
		<ViewTransitions />
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<script is:inline>
			const theme = (() => {
				if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
					return localStorage.getItem('theme');
				}
				if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
					return 'dark';
				}
				return 'light';
			})();

			if (theme === 'light') {
				document.documentElement.classList.remove('dark');
				document.documentElement.classList.add('light');
			} else {
				document.documentElement.classList.add('dark');
				document.documentElement.classList.remove('light');
			}
		</script>
	</head>
	<body class="bg-background text-foreground min-h-screen antialiased">
    <div id="progress" class="progress-bar"></div>
    <header class="sticky top-0 z-50 w-full border-b border-border/40 bg-background/95 backdrop-blur supports-[backdrop-filter]:bg-background/60">
      <div class="container h-14 flex items-center justify-between">
        <a href="/" class="font-bold">DL Cheatsheet</a>
        <ThemeToggle client:load />
      </div>
    </header>
		<main class="container py-8">
			<slot />
		</main>
    <footer class="container py-8 text-sm text-muted-foreground text-center">
      Built with <a href="https://astro.build/" target="_blank" class="underline hover:text-foreground">Astro</a> and <a href="https://svelte.dev/" target="_blank" class="underline hover:text-foreground">Svelte</a>.
      MIT License.
    </footer>
    <script is:inline>
      function addCopyButtons() {
        document.querySelectorAll('pre').forEach(pre => {
          const code = pre.querySelector('code');
          if (!code) return;

          const button = document.createElement('button');
          button.className = 'copy-button';
          button.textContent = 'Copy';
          
          let timeout;
          button.addEventListener('click', () => {
            navigator.clipboard.writeText(code.innerText);
            button.textContent = 'Copied!';
            
            clearTimeout(timeout);
            timeout = setTimeout(() => {
              button.textContent = 'Copy';
            }, 2000);
          });
          
          pre.style.position = 'relative';
          pre.appendChild(button);
        });
      }
      addCopyButtons();
      document.addEventListener('astro:after-swap', addCopyButtons);

      // Reading progress
      const progress = document.getElementById('progress');
      function updateProgress() {
        const scrollTop = window.scrollY;
        const height = document.body.scrollHeight - window.innerHeight;
        const pct = Math.max(0, Math.min(1, height ? scrollTop / height : 0));
        if (progress) progress.style.width = `${pct * 100}%`;
      }
      updateProgress();
      window.addEventListener('scroll', updateProgress, { passive: true });
      document.addEventListener('astro:after-swap', () => {
        updateProgress();
      });
    </script>
	</body>
</html>
<style is:global>
	@import '../styles/global.css';

  .copy-button {
    position: absolute;
    top: 0.5rem;
    right: 0.5rem;
    padding: 0.25rem 0.5rem;
    background-color: hsl(var(--muted) / 0.8);
    border: 1px solid hsl(var(--border));
    color: hsl(var(--muted-foreground));
    border-radius: 0.375rem;
    font-size: 0.75rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    gap: 0.5rem;
    opacity: 0;
    transition: opacity 0.2s;
  }

  pre:hover .copy-button {
    opacity: 1;
  }

 
</style>


